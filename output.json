{
  "meta":{
    "timestamp":"2024-05-16T05:09:01.782799",
    "version":"7.0.1",
    "argv":[
      "/home/sirius/Downloads/malware/7447858ba629883749bfa27f7a6deb01ece420e0f4168ff1eea533d275b2e9d3.exe",
      "-r",
      "capa_rules",
      "-s",
      "capa_sigs",
      "-j",
      "-q"
    ],
    "sample":{
      "md5":"a8af730b7f8a3d4ac88b733f7f0e9696",
      "sha1":"f32d56c4d5af090c3946f5fe4b7ad043fc0c4853",
      "sha256":"7447858ba629883749bfa27f7a6deb01ece420e0f4168ff1eea533d275b2e9d3",
      "path":"/home/sirius/Downloads/malware/7447858ba629883749bfa27f7a6deb01ece420e0f4168ff1eea533d275b2e9d3.exe"
    },
    "flavor":"static",
    "analysis":{
      "format":"pe",
      "arch":"i386",
      "os":"windows",
      "extractor":"VivisectFeatureExtractor",
      "rules":[
        "/home/sirius/PycharmProjects/malan/capa_rules"
      ],
      "base_address":{
        "type":"absolute",
        "value":4194304
      },
      "layout":{
        "functions":[
          {
            "address":{
              "type":"absolute",
              "value":4215267
            },
            "matched_basic_blocks":[
              {
                "address":{
                  "type":"absolute",
                  "value":4215267
                }
              }
            ]
          },
          {
            "address":{
              "type":"absolute",
              "value":11224360
            },
            "matched_basic_blocks":[
              {
                "address":{
                  "type":"absolute",
                  "value":11224378
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224389
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224400
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224411
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224428
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224437
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224448
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224459
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224482
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224497
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224506
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224533
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224542
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224582
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224591
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224637
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224663
                }
              }
            ]
          },
          {
            "address":{
              "type":"absolute",
              "value":11224696
            },
            "matched_basic_blocks":[
              {
                "address":{
                  "type":"absolute",
                  "value":11224696
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224731
                }
              },
              {
                "address":{
                  "type":"absolute",
                  "value":11224752
                }
              }
            ]
          },
          {
            "address":{
              "type":"absolute",
              "value":11616097
            },
            "matched_basic_blocks":[
              {
                "address":{
                  "type":"absolute",
                  "value":11616097
                }
              }
            ]
          }
        ]
      },
      "feature_counts":{
        "file":28844,
        "functions":[
          {
            "address":{
              "type":"absolute",
              "value":4215267
            },
            "count":71
          },
          {
            "address":{
              "type":"absolute",
              "value":11224360
            },
            "count":61
          },
          {
            "address":{
              "type":"absolute",
              "value":11224696
            },
            "count":34
          },
          {
            "address":{
              "type":"absolute",
              "value":11616097
            },
            "count":19
          },
          {
            "address":{
              "type":"absolute",
              "value":12001486
            },
            "count":18
          },
          {
            "address":{
              "type":"absolute",
              "value":12047172
            },
            "count":25
          }
        ]
      },
      "library_functions":[ ]
    }
  },
  "rules":{
    "contain loop":{
      "meta":{
        "name":"contain loop",
        "authors":[
          "moritz.raabe@mandiant.com"
        ],
        "scopes":{
          "static":"function"
        },
        "attack":[ ],
        "mbc":[ ],
        "references":[ ],
        "examples":[
          "08AC667C65D36D6542917655571E61C8:0x406EAA"
        ],
        "description":"",
        "lib":true,
        "is_subscope_rule":false,
        "maec":{ }
      },
      "source":"rule:\n  meta:\n    name: contain loop\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scopes:\n      static: function\n      dynamic: unsupported  # requires characteristic features\n    examples:\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - characteristic: loop\n      - characteristic: tight loop\n      - characteristic: recursive call\n",
      "matches":[
        [
          {
            "type":"absolute",
            "value":4215267
          },
          {
            "success":true,
            "node":{
              "type":"statement",
              "statement":{
                "type":"or"
              }
            },
            "children":[
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"characteristic",
                    "characteristic":"loop"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"characteristic",
                    "characteristic":"tight loop"
                  }
                },
                "children":[ ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":4215301
                  }
                ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"characteristic",
                    "characteristic":"recursive call"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              }
            ],
            "locations":[ ],
            "captures":{ }
          }
        ],
        [
          {
            "type":"absolute",
            "value":11224360
          },
          {
            "success":true,
            "node":{
              "type":"statement",
              "statement":{
                "type":"or"
              }
            },
            "children":[
              {
                "success":true,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"characteristic",
                    "characteristic":"loop"
                  }
                },
                "children":[ ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":11224360
                  }
                ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"characteristic",
                    "characteristic":"tight loop"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"characteristic",
                    "characteristic":"recursive call"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              }
            ],
            "locations":[ ],
            "captures":{ }
          }
        ]
      ]
    },
    "decompress data using aPLib":{
      "meta":{
        "name":"decompress data using aPLib",
        "namespace":"data-manipulation/compression",
        "authors":[
          "@r3c0nst (Frank Boldewin)",
          "moritz.raabe@mandiant.com",
          "cdong49@gatech.edu"
        ],
        "scopes":{
          "static":"function"
        },
        "attack":[ ],
        "mbc":[
          {
            "parts":[
              "Data",
              "Decompress Data",
              "aPLib"
            ],
            "objective":"Data",
            "behavior":"Decompress Data",
            "method":"aPLib",
            "id":"C0025.003"
          }
        ],
        "references":[
          "https://ibsensoftware.com/files/aPLib-1.1.1.zip"
        ],
        "examples":[
          "DAA13AE302FE8B618DDBF590537443EF:0x419F50",
          "B43FCA5283BFC7022553EFF663683834:0x424",
          "757139E76FAE876AE50DD2C3AC11D5D8:0x413074"
        ],
        "description":"detects decompression function of library aPLib",
        "lib":false,
        "is_subscope_rule":false,
        "maec":{ }
      },
      "source":"rule:\n  meta:\n    name: decompress data using aPLib\n    namespace: data-manipulation/compression\n    authors:\n      - \"@r3c0nst (Frank Boldewin)\"\n      - moritz.raabe@mandiant.com\n      - cdong49@gatech.edu\n    description: detects decompression function of library aPLib\n    scopes:\n      static: function\n      dynamic: unsupported  # requires characteristic, mnemonic features\n    mbc:\n      - Data::Decompress Data::aPLib [C0025.003]\n    references:\n      - https://ibsensoftware.com/files/aPLib-1.1.1.zip\n    examples:\n      - DAA13AE302FE8B618DDBF590537443EF:0x419F50\n      - B43FCA5283BFC7022553EFF663683834:0x424\n      - 757139E76FAE876AE50DD2C3AC11D5D8:0x413074\n  features:\n    - and:\n      - description: aP_depack\n      - match: contain loop\n      - instruction:\n        - description: line 138, if (offs >= 32000)\n        - mnemonic: cmp\n        - number: 32000\n      - instruction:\n        - description: line 144, if (offs < 128)\n        - mnemonic: cmp\n        - or:\n          - number: 127\n          - number: 128\n      - instruction:\n        - description: line 133, offs <<= 8;\n        - mnemonic: shl\n        - number: 8\n      - instruction:\n        - description: line 96, offs >>= 1;\n        - mnemonic: shr\n        - number: 1\n      - optional:\n        - count(characteristic(calls from)): 2 or more\n          description: calls aP_getbit and aP_getgamma\n",
      "matches":[
        [
          {
            "type":"absolute",
            "value":11224360
          },
          {
            "success":true,
            "node":{
              "type":"statement",
              "statement":{
                "type":"and",
                "description":"aP_depack"
              }
            },
            "children":[
              {
                "success":true,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"match",
                    "match":"contain loop"
                  }
                },
                "children":[
                  {
                    "success":true,
                    "node":{
                      "type":"statement",
                      "statement":{
                        "type":"or"
                      }
                    },
                    "children":[
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"characteristic",
                            "characteristic":"loop"
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":11224360
                          }
                        ],
                        "captures":{ }
                      },
                      {
                        "success":false,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"characteristic",
                            "characteristic":"tight loop"
                          }
                        },
                        "children":[ ],
                        "locations":[ ],
                        "captures":{ }
                      },
                      {
                        "success":false,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"characteristic",
                            "characteristic":"recursive call"
                          }
                        },
                        "children":[ ],
                        "locations":[ ],
                        "captures":{ }
                      }
                    ],
                    "locations":[ ],
                    "captures":{ }
                  }
                ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":11224360
                  }
                ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"statement",
                  "statement":{
                    "type":"subscope",
                    "scope":"instruction"
                  }
                },
                "children":[
                  {
                    "success":true,
                    "node":{
                      "type":"statement",
                      "statement":{
                        "type":"and"
                      }
                    },
                    "children":[
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"mnemonic",
                            "mnemonic":"cmp"
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":11224604
                          }
                        ],
                        "captures":{ }
                      },
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"number",
                            "number":32000
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":11224604
                          }
                        ],
                        "captures":{ }
                      }
                    ],
                    "locations":[ ],
                    "captures":{ }
                  }
                ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":11224604
                  }
                ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"statement",
                  "statement":{
                    "type":"subscope",
                    "scope":"instruction"
                  }
                },
                "children":[
                  {
                    "success":true,
                    "node":{
                      "type":"statement",
                      "statement":{
                        "type":"and"
                      }
                    },
                    "children":[
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"mnemonic",
                            "mnemonic":"cmp"
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":11224632
                          }
                        ],
                        "captures":{ }
                      },
                      {
                        "success":true,
                        "node":{
                          "type":"statement",
                          "statement":{
                            "type":"or"
                          }
                        },
                        "children":[
                          {
                            "success":true,
                            "node":{
                              "type":"feature",
                              "feature":{
                                "type":"number",
                                "number":127
                              }
                            },
                            "children":[ ],
                            "locations":[
                              {
                                "type":"absolute",
                                "value":11224632
                              }
                            ],
                            "captures":{ }
                          },
                          {
                            "success":false,
                            "node":{
                              "type":"feature",
                              "feature":{
                                "type":"number",
                                "number":128
                              }
                            },
                            "children":[ ],
                            "locations":[ ],
                            "captures":{ }
                          }
                        ],
                        "locations":[ ],
                        "captures":{ }
                      }
                    ],
                    "locations":[ ],
                    "captures":{ }
                  }
                ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":11224632
                  }
                ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"statement",
                  "statement":{
                    "type":"subscope",
                    "scope":"instruction"
                  }
                },
                "children":[
                  {
                    "success":true,
                    "node":{
                      "type":"statement",
                      "statement":{
                        "type":"and"
                      }
                    },
                    "children":[
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"mnemonic",
                            "mnemonic":"shl"
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":11224569
                          }
                        ],
                        "captures":{ }
                      },
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"number",
                            "number":8
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":11224569
                          }
                        ],
                        "captures":{ }
                      }
                    ],
                    "locations":[ ],
                    "captures":{ }
                  }
                ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":11224569
                  }
                ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"statement",
                  "statement":{
                    "type":"subscope",
                    "scope":"instruction"
                  }
                },
                "children":[
                  {
                    "success":true,
                    "node":{
                      "type":"statement",
                      "statement":{
                        "type":"and"
                      }
                    },
                    "children":[
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"mnemonic",
                            "mnemonic":"shr"
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":11224658
                          }
                        ],
                        "captures":{ }
                      },
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"number",
                            "number":1
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":11224658
                          }
                        ],
                        "captures":{ }
                      }
                    ],
                    "locations":[ ],
                    "captures":{ }
                  }
                ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":11224658
                  }
                ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"statement",
                  "statement":{
                    "type":"optional"
                  }
                },
                "children":[
                  {
                    "success":false,
                    "node":{
                      "type":"statement",
                      "statement":{
                        "type":"range",
                        "min":2,
                        "max":9223372036854775808,
                        "child":{
                          "type":"characteristic",
                          "characteristic":"calls from"
                        }
                      }
                    },
                    "children":[ ],
                    "locations":[ ],
                    "captures":{ }
                  }
                ],
                "locations":[ ],
                "captures":{ }
              }
            ],
            "locations":[ ],
            "captures":{ }
          }
        ]
      ]
    },
    "packed with Themida":{
      "meta":{
        "name":"packed with Themida",
        "namespace":"anti-analysis/packer/themida",
        "authors":[
          "william.ballenthin@mandiant.com"
        ],
        "scopes":{
          "static":"file",
          "dynamic":"file"
        },
        "attack":[
          {
            "parts":[
              "Defense Evasion",
              "Obfuscated Files or Information",
              "Software Packing"
            ],
            "tactic":"Defense Evasion",
            "technique":"Obfuscated Files or Information",
            "subtechnique":"Software Packing",
            "id":"T1027.002"
          }
        ],
        "mbc":[
          {
            "parts":[
              "Anti-Static Analysis",
              "Software Packing",
              "Themida"
            ],
            "objective":"Anti-Static Analysis",
            "behavior":"Software Packing",
            "method":"Themida",
            "id":"F0001.011"
          }
        ],
        "references":[
          "https://www.hexacorn.com/blog/2016/12/15/pe-section-names-re-visited/"
        ],
        "examples":[
          "8a132663bee5c2f0f5cbfebee1b55ac72934632bf32bc32d6e2dae797c9e6e35"
        ],
        "description":"",
        "lib":false,
        "is_subscope_rule":false,
        "maec":{ }
      },
      "source":"rule:\n  meta:\n    name: packed with Themida\n    namespace: anti-analysis/packer/themida\n    authors:\n      - william.ballenthin@mandiant.com\n    scopes:\n      static: file\n      dynamic: file\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information::Software Packing [T1027.002]\n    mbc:\n      - Anti-Static Analysis::Software Packing::Themida [F0001.011]\n    references:\n      - https://www.hexacorn.com/blog/2016/12/15/pe-section-names-re-visited/\n    examples:\n      - 8a132663bee5c2f0f5cbfebee1b55ac72934632bf32bc32d6e2dae797c9e6e35\n      # see capa #1104 - 2826b762b9c268601a44974ef469a671b441e798a6c3cbb40070450c6c030ba2\n  features:\n    - or:\n      - section: Themida\n      - section: .Themida\n      - section: .themida\n      - section: WinLicen\n      - section: .winlice\n      - count(section(        )): 2 or more\n        description: Section names containing 8 space characters observed in Themida 3.0.x packed files\n      - and:\n        - description: Section names containing 3 and 8 space characters observed in Themida 2.1.x packed files\n        - section: \"   \"\n        - section: \"        \"\n",
      "matches":[
        [
          {
            "type":"no address"
          },
          {
            "success":true,
            "node":{
              "type":"statement",
              "statement":{
                "type":"or"
              }
            },
            "children":[
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"section",
                    "section":"Themida"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"section",
                    "section":".Themida"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"section",
                    "section":".themida"
                  }
                },
                "children":[ ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":7536640
                  }
                ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"section",
                    "section":"WinLicen"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"section",
                    "section":".winlice"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"statement",
                  "statement":{
                    "type":"range",
                    "min":2,
                    "max":9223372036854775808,
                    "child":{
                      "type":"section",
                      "section":"        "
                    }
                  }
                },
                "children":[ ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":4202496
                  },
                  {
                    "type":"absolute",
                    "value":7208960
                  },
                  {
                    "type":"absolute",
                    "value":7512064
                  }
                ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"statement",
                  "statement":{
                    "type":"and",
                    "description":"Section names containing 3 and 8 space characters observed in Themida 2.1.x packed files"
                  }
                },
                "children":[
                  {
                    "success":false,
                    "node":{
                      "type":"feature",
                      "feature":{
                        "type":"section",
                        "section":"   "
                      }
                    },
                    "children":[ ],
                    "locations":[ ],
                    "captures":{ }
                  },
                  {
                    "success":true,
                    "node":{
                      "type":"feature",
                      "feature":{
                        "type":"section",
                        "section":"        "
                      }
                    },
                    "children":[ ],
                    "locations":[
                      {
                        "type":"absolute",
                        "value":4202496
                      },
                      {
                        "type":"absolute",
                        "value":7208960
                      },
                      {
                        "type":"absolute",
                        "value":7512064
                      }
                    ],
                    "captures":{ }
                  }
                ],
                "locations":[ ],
                "captures":{ }
              }
            ],
            "locations":[ ],
            "captures":{ }
          }
        ]
      ]
    },
    "compiled to the .NET platform":{
      "meta":{
        "name":"compiled to the .NET platform",
        "namespace":"runtime/dotnet",
        "authors":[
          "william.ballenthin@mandiant.com"
        ],
        "scopes":{
          "static":"file",
          "dynamic":"file"
        },
        "attack":[ ],
        "mbc":[ ],
        "references":[ ],
        "examples":[
          "b9f5bd514485fb06da39beff051b9fdc"
        ],
        "description":"",
        "lib":false,
        "is_subscope_rule":false,
        "maec":{ }
      },
      "source":"rule:\n  meta:\n    name: compiled to the .NET platform\n    namespace: runtime/dotnet\n    authors:\n      - william.ballenthin@mandiant.com\n    scopes:\n      static: file\n      dynamic: file\n    examples:\n      - b9f5bd514485fb06da39beff051b9fdc\n  features:\n    - or:\n      - format: dotnet\n      - import: mscoree._CorExeMain\n      - import: mscoree._corexemain\n      - import: mscoree._CorDllMain\n      - import: mscoree._cordllmain\n",
      "matches":[
        [
          {
            "type":"no address"
          },
          {
            "success":true,
            "node":{
              "type":"statement",
              "statement":{
                "type":"or"
              }
            },
            "children":[
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"format",
                    "format":"dotnet"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":true,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"import",
                    "import_":"mscoree._CorExeMain"
                  }
                },
                "children":[ ],
                "locations":[
                  {
                    "type":"absolute",
                    "value":7520384
                  }
                ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"import",
                    "import_":"mscoree._corexemain"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"import",
                    "import_":"mscoree._CorDllMain"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"import",
                    "import_":"mscoree._cordllmain"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              }
            ],
            "locations":[ ],
            "captures":{ }
          }
        ]
      ]
    },
    "(internal) packer file limitation":{
      "meta":{
        "name":"(internal) packer file limitation",
        "namespace":"internal/limitation/file",
        "authors":[
          "william.ballenthin@mandiant.com"
        ],
        "scopes":{
          "static":"file",
          "dynamic":"file"
        },
        "attack":[ ],
        "mbc":[ ],
        "references":[ ],
        "examples":[
          "CD2CBA9E6313E8DF2C1273593E649682"
        ],
        "description":"This sample appears to be packed.\n\nPacked samples have often been obfuscated to hide their logic.\ncapa cannot handle obfuscation well using static analysis. This means the results may be misleading or incomplete.\nIf possible, you should try to unpack this input file before analyzing it with capa.\nAlternatively, run the sample in a supported sandbox and invoke capa against the report to obtain dynamic analysis results.\n",
        "lib":false,
        "is_subscope_rule":false,
        "maec":{ }
      },
      "source":"rule:\n  meta:\n    name: (internal) packer file limitation\n    namespace: internal/limitation/file\n    authors:\n      - william.ballenthin@mandiant.com\n    description: |\n      This sample appears to be packed.\n\n      Packed samples have often been obfuscated to hide their logic.\n      capa cannot handle obfuscation well using static analysis. This means the results may be misleading or incomplete.\n      If possible, you should try to unpack this input file before analyzing it with capa.\n      Alternatively, run the sample in a supported sandbox and invoke capa against the report to obtain dynamic analysis results.\n    scopes:\n      static: file\n      dynamic: file\n    examples:\n      - CD2CBA9E6313E8DF2C1273593E649682\n  features:\n    - or:\n      - match: anti-analysis/packer\n",
      "matches":[
        [
          {
            "type":"no address"
          },
          {
            "success":true,
            "node":{
              "type":"statement",
              "statement":{
                "type":"or"
              }
            },
            "children":[
              {
                "success":true,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"match",
                    "match":"anti-analysis/packer"
                  }
                },
                "children":[
                  {
                    "success":true,
                    "node":{
                      "type":"statement",
                      "statement":{
                        "type":"or"
                      }
                    },
                    "children":[
                      {
                        "success":false,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"section",
                            "section":"Themida"
                          }
                        },
                        "children":[ ],
                        "locations":[ ],
                        "captures":{ }
                      },
                      {
                        "success":false,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"section",
                            "section":".Themida"
                          }
                        },
                        "children":[ ],
                        "locations":[ ],
                        "captures":{ }
                      },
                      {
                        "success":true,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"section",
                            "section":".themida"
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":7536640
                          }
                        ],
                        "captures":{ }
                      },
                      {
                        "success":false,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"section",
                            "section":"WinLicen"
                          }
                        },
                        "children":[ ],
                        "locations":[ ],
                        "captures":{ }
                      },
                      {
                        "success":false,
                        "node":{
                          "type":"feature",
                          "feature":{
                            "type":"section",
                            "section":".winlice"
                          }
                        },
                        "children":[ ],
                        "locations":[ ],
                        "captures":{ }
                      },
                      {
                        "success":true,
                        "node":{
                          "type":"statement",
                          "statement":{
                            "type":"range",
                            "min":2,
                            "max":9223372036854775808,
                            "child":{
                              "type":"section",
                              "section":"        "
                            }
                          }
                        },
                        "children":[ ],
                        "locations":[
                          {
                            "type":"absolute",
                            "value":4202496
                          },
                          {
                            "type":"absolute",
                            "value":7208960
                          },
                          {
                            "type":"absolute",
                            "value":7512064
                          }
                        ],
                        "captures":{ }
                      },
                      {
                        "success":false,
                        "node":{
                          "type":"statement",
                          "statement":{
                            "type":"and",
                            "description":"Section names containing 3 and 8 space characters observed in Themida 2.1.x packed files"
                          }
                        },
                        "children":[
                          {
                            "success":false,
                            "node":{
                              "type":"feature",
                              "feature":{
                                "type":"section",
                                "section":"   "
                              }
                            },
                            "children":[ ],
                            "locations":[ ],
                            "captures":{ }
                          },
                          {
                            "success":true,
                            "node":{
                              "type":"feature",
                              "feature":{
                                "type":"section",
                                "section":"        "
                              }
                            },
                            "children":[ ],
                            "locations":[
                              {
                                "type":"absolute",
                                "value":4202496
                              },
                              {
                                "type":"absolute",
                                "value":7208960
                              },
                              {
                                "type":"absolute",
                                "value":7512064
                              }
                            ],
                            "captures":{ }
                          }
                        ],
                        "locations":[ ],
                        "captures":{ }
                      }
                    ],
                    "locations":[ ],
                    "captures":{ }
                  }
                ],
                "locations":[
                  {
                    "type":"no address"
                  }
                ],
                "captures":{ }
              }
            ],
            "locations":[ ],
            "captures":{ }
          }
        ]
      ]
    },
    "reference anti-VM strings targeting Xen":{
      "meta":{
        "name":"reference anti-VM strings targeting Xen",
        "namespace":"anti-analysis/anti-vm/vm-detection",
        "authors":[
          "michael.hunhoff@mandiant.com"
        ],
        "scopes":{
          "static":"file",
          "dynamic":"file"
        },
        "attack":[
          {
            "parts":[
              "Defense Evasion",
              "Virtualization/Sandbox Evasion",
              "System Checks"
            ],
            "tactic":"Defense Evasion",
            "technique":"Virtualization/Sandbox Evasion",
            "subtechnique":"System Checks",
            "id":"T1497.001"
          }
        ],
        "mbc":[
          {
            "parts":[
              "Anti-Behavioral Analysis",
              "Virtual Machine Detection"
            ],
            "objective":"Anti-Behavioral Analysis",
            "behavior":"Virtual Machine Detection",
            "method":"",
            "id":"B0009"
          }
        ],
        "references":[
          "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Xen.cpp"
        ],
        "examples":[
          "al-khaser_x86.exe_"
        ],
        "description":"",
        "lib":false,
        "is_subscope_rule":false,
        "maec":{ }
      },
      "source":"rule:\n  meta:\n    name: reference anti-VM strings targeting Xen\n    namespace: anti-analysis/anti-vm/vm-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n    scopes:\n      static: file\n      dynamic: file\n    att&ck:\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\n    mbc:\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Xen.cpp\n    examples:\n      - al-khaser_x86.exe_\n  features:\n    - or:\n      - string: /^Xen/i\n      - string: /XenVMMXenVMM/i\n      - string: /xenservice.exe/i\n      - string: /XenVMMXenVMM/i\n      - string: /HVM domU/i\n",
      "matches":[
        [
          {
            "type":"no address"
          },
          {
            "success":true,
            "node":{
              "type":"statement",
              "statement":{
                "type":"or"
              }
            },
            "children":[
              {
                "success":true,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"regex",
                    "regex":"/^Xen/i"
                  }
                },
                "children":[ ],
                "locations":[
                  {
                    "type":"file",
                    "value":972175
                  }
                ],
                "captures":{
                  "xEn.":[
                    {
                      "type":"file",
                      "value":972175
                    }
                  ]
                }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"regex",
                    "regex":"/XenVMMXenVMM/i"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"regex",
                    "regex":"/xenservice.exe/i"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"regex",
                    "regex":"/XenVMMXenVMM/i"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              },
              {
                "success":false,
                "node":{
                  "type":"feature",
                  "feature":{
                    "type":"regex",
                    "regex":"/HVM domU/i"
                  }
                },
                "children":[ ],
                "locations":[ ],
                "captures":{ }
              }
            ],
            "locations":[ ],
            "captures":{ }
          }
        ]
      ]
    }
  }
}